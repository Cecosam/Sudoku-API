using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Sudoku
{
    public class PredefinedVeryHardSudokus
    {
        public static string GetPredefinedSudokuVeryHard(int number)
        {
            switch (number)
            {
                case 0: return "000000005538146729400000000084261357150000862260000000000015293325000000000000000";
                case 1: return "000000003300451862185300000000000530013295647547163298000002000000000026260000000";
                case 2: return "003608005584317000076529400700900000000000000008000000002473581840000000305286900";
                case 3: return "050267843324000060000934250000076982892400000000000000000000008600000415000000000";
                case 4: return "000300142432178900001942783900025814000031670000000000020000000000060000000000008";
                case 5: return "000000008597843162843162795789400000000000810000089430000000001600000000000000000";
                case 6: return "050026000000000023132789654320091486864200000000000000081942300000000000000000000";
                case 7: return "000000413741325986638194572310002864264871395800000000000000000000000000000000000";
                case 8: return "000596712967128543152743000000000000000000287784210000005300000000000000000000000";
                case 9: return "000007931714320086000851274541286300000030000000000012172690000000000000000000000";
                case 10: return "001480000524167080000532740063014000000378269007950000000003000002095000800000000";
                case 11: return "000004921294167358158293040000000000000000719519748236900000000000000000000000000";
                case 12: return "000000000013795462952463178485172639396854001000000000000000000000000000000000000";
                case 13: return "000700000470000020000000607000000081534186792000320000060034009000971836009000000";
                case 14: return "002000915000000403713940600000000240000400007409200080098764100000009004004580760";
                case 15: return "000000074471925863986473050020000000000000000095000000109000500060501000037248000";
                case 16: return "000000048846539172271846593760482930000000050000000000900000000000090000000000000";
                case 17: return "000138725872594316531762894000000000000000569796451283060820000000000000000000000";
                case 18: return "610000008500000090020685713000068024146209800002000000000816007008000006200000000";
                case 19: return "007034120000000000428961753002345689986217534500000000000000000000000000000000000";
                case 20: return "061458329529013847384700000000000000042879531935126000000000000000560000000000000";
                case 21: return "000034176417659382638172000000000500000000213100000000954723801200000000000000000";
                case 22: return "000000800000000000000000000000200009153974268002800073395740000800036924420190000";
                case 23: return "060500000000210674720000185937426518481395762000007439000000000002859007000000000";
                case 24: return "000000087637004000000712000000071264871246395462390718549600000000000000000000000";
                case 25: return "000008153400001762703500008100000000000364510670812430000000005500000000001000600";
                case 26: return "007483591548791236319600478832579164000000000000000000000000000000056812200000000";
                case 27: return "000000000798512634623487159961273845234658700000000000000000000000000000000000000";
                case 28: return "000014985149800002358729400000000000700030009693500024864250000000100000500000000";
                case 29: return "063495782498672351572380000000000000000009864641800000000000000000000000000000000";
                case 30: return "600000000000000000000000000000084167386179254710000000937542610062791543400000002";
                case 31: return "000000007000000000008000000004020053350000004780000916849275361561394700000680000";
                case 32: return "000000752527413968906752431490000080000000000000000000009538210200000000000096000";
                case 33: return "000941375431758629975362418000000000000000000756184290000000000800000000000000000";
                case 34: return "005173400000000000006004251918352740000000003563700928820000090030000000000000000";
                case 35: return "000065791657912480000000000000000637596473128371286900000000004000000000000000000";
                case 36: return "000972481478531692921846700000000000000003918816495237000000000000000000000000000";
                case 37: return "000007410284531697175946328817000060000000000009000000000000150000005002563210000";
                case 38: return "000000742254718936793264815320580000000000281841927500000000000000000100000000000";
                case 39: return "000000000004200000000098000000046512417325869265180003371000000000830000000070000";
                case 40: return "000027653000000002234560000743006589825793146000054237476382900000000000000000000";
                case 41: return "060009582000000000002000000000004178187365429420000060000500006000020000056008714";
                case 42: return "000019278927860041185274690700000000000000000800000000679432800000000000304600000";
                case 43: return "010000862267185934893264000000000173731900000000000000000090000000000000379650000";
                case 44: return "625831790000000000000000013934127658586493271712650000000000000000000000000000000";
                case 45: return "006000387435879621080000000001543279972168435300000000000000000000000000000000000";
                case 46: return "008672400061893000000004068000726500046935817759140000000000000005481200000000000";
                case 47: return "004831000035679400698254100800000216240000700061780094010000000002000073307000000";
                case 48: return "009427680000016429642000001000000007871539200000000000000000000085672910000000000";
                case 49: return "847952001520006400031478592973261000065789213000340000000000730000000100700000900";
                case 50: return "000001357000000006263579018690000000780093260000764805000900000000000079010000002";
                case 51: return "800007000731564208000008600120000000000000012640000000018400720400000000076182530";
                case 52: return "005000000008000020061423000500008761100000000736000080000000008240085179857910000";
                case 53: return "000006149149758002263400000000000000001673284320000090000000000000040035500000001";
                case 54: return "279608543000002710163400000000143850000000004734825001842571300000000000000000000";
                case 55: return "000035129512946738973128546106000000000000007000260000000070000800000000400000000";
                case 56: return "000040571547186320000753486354897162781265934269300000000000000000000000000000000";
                case 57: return "287954631194000000000810004000000369930000000000009410000000576560007000002000000";
                case 58: return "000000000097584231482317569938251604000000000000000012216730000000000000000000000";
                case 59: return "003814976819673254467925810000000000000000005152367400000000000000000000000000000";
                case 60: return "000017592752934681196528740009265437500000000000000000000000000000000000000000000";
                case 61: return "416953827038000000000784610000000259120000000000206000000000030500000042673420000";
                case 62: return "038796000000008300000000000000583491913470080000010030000800726620030000400000900";
                case 63: return "000952000008316529925478316647521980000000005359784100000000000000000000284000000";
                case 64: return "001529768752186934698473000049738126813600000000000000005000000000000000060000002";
                case 65: return "200398715879516324153724896700000000000400000000007000605109000000000080004200000";
                case 66: return "014739000000000492869245371936821547742950000000000000000000000000000000000000000";
                case 67: return "000000000100087002006000400000900000931752640020001000609020004480069200000574800";
                case 68: return "000000000786192543195643827000000008000000000000000000000000000000000735824735196";
                case 69: return "002614358614358297300000064529463871463800000000000000000000000000000000000000000";
                case 70: return "000000000132987564987500020000008000000000038843190000000875000000003845500000000";
                case 71: return "000000725000082413241300098800007936300000004159436287000000000000010000000060000";
                case 72: return "000036189618794350000000067765480003489123576321000000037900008000000000000000000";
                case 73: return "000372910072156348153409006690000000015000000004297560000000000000004830000000000";
                case 74: return "084159000000000000005782000039827461871645902642913087700000800000000005000000000";
                case 75: return "400060000100200060800000040000135674764900010030000000615340000948600000020800450";
                case 76: return "070000000053987416891654327539426871168735000024000000000000000000000003340000000";
                case 77: return "000008170000000005758163200000000036479836512635219000000000000000002350000000000";
                case 78: return "000093817831726954579184000000000000000000546465978200000000000000000000000000000";
                case 79: return "008532749370000528200748613829175364456329187000000000000000000000607400000000000";
                case 80: return "052816937793524186186793524520000000000000000864259371000000000000000000000000000";
                case 81: return "000000643451396278863742519387460000000000000000500390000000006000000000000200000";
                case 82: return "000001200917236845230000091000000083348000000006000000000000019871940000003100008";
                case 83: return "004000135351642700000005246732490051948251673165738000000000000000000000000000000";
                case 84: return "040000080002000030000000000000400000627158390000070061261705943394010050050000000";
                case 85: return "000000008473896125896125734300000000700000000564789213980000000000000002135200000";
                case 86: return "000000007678945132940000000005493218134000000009751300000000724210000000000000000";
                case 87: return "000067029276198354958000610003651900000734586765289001000000700000000000000800040";
                case 88: return "300075962698421537752309000000000000000083790030746200000000050000000000026910000";
                case 89: return "005138249489652137100000000000000005000000000000020800593214678700000000000000000";
                case 90: return "018000046000070093237600008009000102105862934006941000651387420000000000000000000";
                case 91: return "472165938836942175915700000000000000007281346641379850000000000000000000000000000";
                case 92: return "002876549576249831849000000068520000000068452254910678000000000000000000000000000";
                case 93: return "100000007000000030697314800200406380300000004000000000029841073400000105000090248";
                case 94: return "004972318817365429932814765693150000000093157751420000000000000000000000000000000";
                case 95: return "000921745495786123712453698124060000078139204000000000000000030000308000000000000";
                case 96: return "003452961426193785591678000000000000000000076769341000000037000000004300000000000";
                case 97: return "009481267806952130000367895941570000000000000000000000497600000000000003230000000";
                case 98: return "000062875628715934574893216812659043943271650000000000000000009000000000000000000";
                case 99: return "007000029430100000500000000600000103000001400000000508700000200308214957291375000";
                default: return null;
            }
        }
    }
}
